pipeline {
    agent any
    environment{
        ECR_REPOSITORY = creditentials('ECR_REPOSITORY')
        AWS_ACCOUNT_ID = creditentials('AWS_ACCOUNT_ID')
        AWS_ACCESS_KEY_ID = creditentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = creditentials('AWS_SECRET_ACCESS_KEY')
    }

    stages{
        stage('Continuous Integration'){
            steps{
                script{
                    echo "Linting repository"
                    echo "Running unit tests"
                }
            }
        }
        stage('Login to ECR'){
            steps{
                script{
                    sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com'
                }
            }
        }
        stage('Build Image'){
            steps{
                script{
                    sh 'docker bulid -t ${ECR_REPOSITORY}:latest .'
                }
            }
        }
        stage('Push Image'){
            steps{
                script {
                    sh 'docker push ${ECR_REPOSITORY}:latest'
                }
            }
        }
        stage('Continuous Deployment') {
            steps{
                sshagent(['ssh_key']){
                    sh "ssh -o StrictHostKeyChecking=no -l ubuntu 54.80.194.59 'cd /home/ubuntu/ && wget https://raw.githubusercontent.com/entbappy/End-to-end-Object-Detection-Project/main/docker-compose.yml && export IMAGE_NAME=${ECR_REPOSITORY}:latest && aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com && docker compose up -d '"
                }
            }
        }

    }
    post{
        always{
            sh 'docker system prune -f'
        }
    }
}